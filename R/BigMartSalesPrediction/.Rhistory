source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(table)
View(table)
View(table)
View(table)
View(table)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(table)
View(table)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(table)
View(table)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(table)
View(table)
typeof(table)
View(table)
View(table)
library(dyplr)
library(dplyr)
select(df1, A, B, E)
select(table, A, B, E)
View(table)
View(table)
select(table, Symbol)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(table)
View(table)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(stocks.symbols)
View(stocks.symbols)
View(table)
View(table)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
View(stocks.names)
View(stocks.names)
View(stocks.names)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
table1<-table[-1,-1]
View(table1)
View(table1)
View(table)
View(table)
View(table1)
View(table1)
colnames(table1)<-table[1,-1]
View(table1)
View(table1)
DT::datatable(table1)
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('C:/Users/Aritz/Desktop/Algorithmic_trading_with_R.R', encoding = 'UTF-8')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
require(IBrokers)
deparse(twsCALLBACK)[30:47]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(table)
View(table)
demo()
demo(Japanese)
3+9
x = 3
y = 9
x + y
clc
clear
clear()
clc()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Beispiel
sum(Beispiel)
length(Beispiel)
barplot(Beispiel)
barplot(Beispiel, xlab = 'some german word')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'more german')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'red')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'red, 'purple'')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'red, 'purple')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = c('red, 'purple')
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = c('red', 'purple')
exit
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = c('red', 'purple'))
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'blue'
exit
barplot(Beispiel, xlab = 'some german word', sub = 'n = 21', col = 'blue')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
c
c()
values = (20, 55, 60, 58, 50, 68, 95)
values = c(20, 55, 60, 58, 50, 68, 95)
values
values[0]
values[1]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
x+y
x+y
source('~/.active-rstudio-document')
x+z
x+z
source('~/.active-rstudio-document', echo=TRUE)
x+z
x+y
cat("\014")
sqrt(4)
vector(length = 9)
vector("logical", length = 9)
vector("integer", length = 9)
vector("complex", length = 9)
vector("numeric", length = 9)
vector(5, 6, 5)
vector(5, 6)
vector(5)
vector(length = 5)
vector.help()
vector.help
c('something', 5, 6.5, True)
c('something', 5, 6.5, TRUE)
c('something', 5, 6.5, TRUE) -> variable
variable
class(variable)
bar <- 0:5
bar
class(bar)
as.numeric(bar)
bar
class(bar)
as.numeric(bar)-> bar2
class(bar2)
as.character(bar)
as.character(bar)->bar
bar
as.numeric(bar)->bar
bar
bar -> c('something', 'random')
bar -> c("something", "random")
bar <- c('something', 'random')
bar
class(bar)
as.type(bar)
as.numeric(bar)
c("something", TRUE, 5)
c("something", TRUE, 5)->now
class(now)
now[0]
now[1]
now[2]
now[3]
my_list <- list(22, "ab", TRUE, 1 + 2i)
my_list
my_list[1]
my_list[2]
my_list[3]
my_list[[3]
]
my_matrix <- matrix(1:6, nrow=3, ncol=2)
my_matrix2 <- matrix(c(2, 5), c(2, 5), c(2, 5))
my_matrix
my_matrix2
my_matrix2 <- matrix(c(2, 5), c(2, 5), c(2, 5), c(2, 5))
my_matrix2
my_matrix2 <- matrix(c(2, 5), c(2, 5, 6, 5)
)
my_matrix2 <- matrix(c(2, 5), c(2, 5, 6, 5)
)
my_matrix2
my_matrix2 <- matrix(c(2, 5, 0, 0), c(2, 5, 6, 5))
my_matrix2
matrix(help)
help matrix
help.matrix
help(matrix)
matrix
my_matrix
my_matrix <- matrix(c(0, 0, 0, 0, 1, 2, 3), nrow=3, ncol=2)
my_matrix <- matrix(c(0, 0, 0, 0, 1, 2), nrow=3, ncol=2)
my_matrix
dim(my_matrix)
dim(my_matrix)
attributes(my_matrix)
my_matrix[1]
my_matrix[2]
my_matrix[6]
my_matrix[7]
my_matrix[4:6]
my_matrix[2:6]
my_matrix[,1]
my_matrix[,2]
my_matrix[,3]
my_matrix[1,]
my_matrix[2,]
my_matrix[3,]
ages <- c(23, 44, 15, 12, 31, 16)
ages
dim(age)
c(2,3)
dimension = c(2,3)
dim(age) = dimension
dim(age) <- dimension
dim(ages) <- dimension
ages
df <- data.frame(name = c("ash","jane","paul","mark"), score = c(67,56,87,91))
df
str(df)
class(df)
is.na(df)
df$score
mean(df$score)
mean(df$score, na.rm = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
vot <- c(20, 55, 60, 58, 50, 68, 95)
vot
mean(vot)
(20-58)*2
(20-58)^2
ad(vot)
vot
help(ad)
help(??ad)
ad(vot)
ad.vot
add(vot)
install.packages("ad")
ad(vot)
ad <- available.packages()
sd(vot)
View(ad)
View(ad)
rm(ad)
hist(vot)
hist(vot, color = 'blue')
hist(vot, col = 'blue')
hist(vot, col = 'green')
vot
help(hist)
hist(vot, freq = 5, col = 'green')
hist(vot, freq = 50, col = 'green')
help(hist)
hist(vot, breaks = 2)
hist(vot, breaks = 1)
hist(vot, breaks = 10)
hist(vot, breaks = 10, freq = 2)
hist(vot, breaks = 10, freq = 10)
hist(vot, breaks = 10. col = c('green', 'pink', 'blue', 'red', 'yellow'))
hist(vot, breaks = 10, col = c('green', 'pink', 'blue', 'red', 'yellow'))
hist(vot, breaks = 10, col = c('green', 'black', 'blue', 'red', 'yellow'))
hist(vot, breaks = 10, col = c('green', 'black', 'blue', 'red', 'yellow', 'gray'))
hist(vot, breaks = 10, col = c('green', 'black', 'blue', 'red', 'yellow', 'gray'), main = 'My best histogram')
vot2 <- c(95, 75, 34, 25, 55, 53, 120, 85, 46, 63)
vot
vot2
vot2[[length(vot2)]] <- NULL
vot2[[length(vot2)-1]] <- NULL
length(vot2)
vot2[length(vot2)]
vot2[length(vot2)] <- NULL
vot2[-length(vot2)]
vot2[-length(vot2)] + vot
vot3 = c(vot, vot2)
vot3
vot2
vot2[-0] + vot
vot2[-1] + vot
vot2[-1]
vot2[-0]
vot2[-1]
c(vot2[-1], vot) -> vot3
vot3
hist(vot3, col = c('white', 'green', 'red'))
hist(vot3, col = c('white', 'green', 'red'), main = 'My basque historgram')
help("hist")
?hist
dnorm(vot)
rnorm(vot)
rnorm(vot3)
dnorm(vot3)
vot2 <- vot3
vot2[-1]
vot2 <- vot2[-1]
simulation <- rnorm(10, mean = 58, sd = 22)
simulatin
simulation
hist(simulation)
simulation
simulation
simulation
simulation
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
simulation
rnorm(10, mean = 58, sd = 22)
simulation
simulation
simulation
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
simulation
rnorm(10, mean = 58, sd = 22)
simulation
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
rnorm(10, mean = 58, sd = 22)
mean(simulation)
sd(simulation)
rnorm(10000, mean = 58, sd = 22)
simulation <- rnorm(10000, mean = 58, sd = 22)
mean(simulation)
sd(simulation)
simulation <- rnorm(10000000, mean = 58, sd = 22)
sd(simulation)
mean(simulation)
hist(Simulation)
hist(simulation)
hist(simulation, col='grey')
hist(simulation, col='ligthgrey')
hist(simulation, col='grey')
simulation <- rnorm(1000000000000, mean = 58, sd = 22)
simulation <- rnorm(10000000000, mean = 58, sd = 22)
simulation <- rnorm(1000000000, mean = 58, sd = 22)
hist(simulation, col='grey')
simulation <- rnorm(10000000, mean = 58, sd = 22)
hist(simulation, col='grey')
density(simulation)
lines(density(simulation))
lines(density(simulation), col = "darkred")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
windows()
hist(simulation, freq = FALSE, col = "grey90", xlim=c(-25, 100), ylim = c(0, 0.05))
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
lines(density(simulation), col = "darkred")
source('~/.active-rstudio-document', echo=TRUE)
lines(density(simulation), col = "darkred")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Mann <- c(11, 53, 23, 41)
Mann_matrix <- matrix(Mann, 2, 2)
Mann_matrix
colnames(Mann)
colnames(Mann_matrix)
colnames(Mann_matrix) <- c("something", "something else")
Mann_matrix
rownames(Mann_matrix) <- c("row", "row else")
Mann_matrix
barplot(Mann)
barplot(Mann_matrix)
barplot(Mann_matrix, col=c('red', 'green'))
barplot(Mann_matrix, col=c('red', 'green', 'blue'))
barplot(Mann_matrix, col=c('red', 'green'))
barplot(Mann_matrix, col=c('limegreen', 'violet'))
barplot(Mann_matrix, col=c('limegreen', 'violet', 'yellow'))
barplot(Mann_matrix, col=c('violet', 'yellow'))
barplot(Mann_matrix, col=c('aquamarine', 'yellow'))
barplot(Mann_matrix, col=c('aquamarine', 'rose'))
barplot(Mann_matrix, col=c('aquamarine', 'violet'))
chisq.test(Mann)
Mann
chisq.test(Mann_matrix)
Mann
Mann_matrix
x = 9
for (i in 1:4){}
for (i in 1:4){
x = x - i*2
if x < 3:
for (i in 1:4){
x = x - i*2
if (x<3){}
}
for (i in 1:4){
x = x - i*2
if (x<3){
print('less than 3!')
}else{
print('more than 3!')
}
}
age <- 12
while(age<18){
print('underage! '+age)
age <- age +1
}
while(age<18){
print('underage! '+as.character(age))
age <- age +1
}
age
as.character(age)
as.character(age) + 'hello'
as.character(age) + "hello"
as.character(age) + "hello"
class("hello")
c("12", "hello")
while(age<18){
print(c('underage! ', as.character(age)))
age <- age +1
}
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
path <- ".R/Self-learning/BigMartSalesPrediction"
setwd(path)
getwd()
train <- read.csv("Train.csv")
test <- read.csv("Test.csv")
View(train)
View(train)
dim(train)
dim(test)
str(train)
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R', echo=TRUE)
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R', echo=TRUE)
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
#check if the data has missing values
table(is.na(train))
source('~/.R/Self-learning/BigMartSalesPrediction/script.R', echo=TRUE)
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
source('~/.R/Self-learning/BigMartSalesPrediction/script.R')
table(is.na(train))
table(is.na(test))
is.na(train)
colSums(is.na(train))
summary(train)
